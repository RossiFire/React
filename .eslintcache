[{"C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\index.js":"1","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\App.js":"2","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\serviceWorker.js":"3","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\app\\store.js":"4","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\features\\navbar\\Navbar.js":"5","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Table\\Table.js":"6","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Table\\ProvaSlice.js":"7","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Table\\CustomerSlice.js":"8","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Form\\ModificaForm.js":"9","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Form\\AggiungiForm.js":"10","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Table\\MezziSlice.js":"11","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Table\\PrenotazioniSlice.js":"12"},{"size":644,"mtime":1612169063051,"results":"13","hashOfConfig":"14"},{"size":1078,"mtime":1613051276166,"results":"15","hashOfConfig":"14"},{"size":5141,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":486,"mtime":1613041663312,"results":"17","hashOfConfig":"14"},{"size":1448,"mtime":1613042966369,"results":"18","hashOfConfig":"14"},{"size":4782,"mtime":1613044205849,"results":"19","hashOfConfig":"14"},{"size":5450,"mtime":1612774743936,"results":"20","hashOfConfig":"14"},{"size":2160,"mtime":1613042205697,"results":"21","hashOfConfig":"14"},{"size":5514,"mtime":1613120199157,"results":"22","hashOfConfig":"14"},{"size":4556,"mtime":1613049821090,"results":"23","hashOfConfig":"14"},{"size":1986,"mtime":1613051363663,"results":"24","hashOfConfig":"14"},{"size":2089,"mtime":1613051375074,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1myvq60",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\index.js",[],["56","57"],"C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\App.js",[],"C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\serviceWorker.js",[],"C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\app\\store.js",["58"],"import { configureStore, applyMiddleware } from '@reduxjs/toolkit';\r\nimport thunk from 'redux-thunk'\r\nimport ProvaSlice from '../Table/ProvaSlice'\r\nimport CustomerSlice from '../Table/CustomerSlice'\r\nimport MezziSlice from '../Table/MezziSlice'\r\nimport PrenotazioniSlice from '../Table/PrenotazioniSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    mezzi :MezziSlice,\r\n    customer : CustomerSlice,\r\n    prenotazioni : PrenotazioniSlice\r\n  }\r\n}, \r\napplyMiddleware(thunk)\r\n);\r\n","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\features\\navbar\\Navbar.js",["59","60"],"import React, { useEffect } from 'react';\r\nimport './navbar.css'\r\nimport { useDispatch } from 'react-redux';\r\nimport {Navbar, Nav, Button} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {fetchCustomerData} from '../../Table/CustomerSlice'\r\nimport {fetchMezziData} from '../../Table/MezziSlice'\r\nimport {fetchPrenotazioniData} from '../../Table/PrenotazioniSlice'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport function AppNavbar(){\r\n    const dispatch = useDispatch()\r\n/*     useEffect(()=>{\r\n        dispatch(fetchCustomerData())\r\n    }) */\r\n    return(\r\n        <div>\r\n            <Navbar expand=\"sm\" className=\"navbar\">\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link><Link to=\"/customer\"><button onClick={() =>dispatch(()=>dispatch(fetchCustomerData()))}>Customer</button></Link></Nav.Link>\r\n                    <Nav.Link><Link to=\"/parcoauto\"><button onClick={() =>dispatch(()=>dispatch(fetchMezziData()))}>Parco auto</button></Link></Nav.Link>\r\n                    <Nav.Link><Link to=\"/prenotazioni\"><button onClick={() =>dispatch(()=>dispatch(fetchPrenotazioniData()))}>Prenotazioni</button></Link></Nav.Link>\r\n                </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n\r\n            )\r\n}\r\n\r\nexport default AppNavbar;","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Table\\Table.js",["61","62","63"],"import React, { Component, useEffect } from 'react'\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport { Button } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {delCustomer} from '../Table/CustomerSlice'\r\nimport {delMezzo} from '../Table/MezziSlice'\r\nimport {delPrenotazione} from '../Table/PrenotazioniSlice'\r\nimport './table.css'\r\nimport * as _ from 'lodash'\r\nimport {Link} from 'react-router-dom'\r\nimport {nanoid} from 'nanoid'\r\n\r\nfunction Table(props){\r\n    let TB = ''\r\n    let data = []\r\n    let sliceData;\r\n    const dispatch = useDispatch();\r\n    let dt\r\n    let state = useSelector(state => state);\r\n\r\n    //  Checking Customer-Mezzi-Prenotazioni\r\n    switch(props.match.url.split(\"/\")[1]){\r\n        case 'customer':\r\n            dt = state.customer\r\n            break;\r\n        case 'parcoauto':\r\n            dt = state.mezzi\r\n            break;\r\n        case 'prenotazioni':\r\n            dt = state.prenotazioni\r\n            break;\r\n        default:\r\n            dt = state.customer\r\n            break;\r\n    }\r\n\r\n    data = dt.Dati\r\n\r\n    if(dt.head){\r\n        if(data.length > 6){\r\n            sliceData = data.slice(0,6)\r\n        }else{\r\n            sliceData = data\r\n        }\r\n\r\n    /// FUNZIONE PER ORDINARE DA FARE\r\n\r\n    function OrderById(){\r\n        console.log(data)\r\n        data =_.orderBy(data, ['id'],['asc'])\r\n        console.log(data)\r\n    }\r\n    TB =\r\n    <div>\r\n        <Button onClick={()=>OrderById()}>Ordina</Button>\r\n    <table>\r\n        <thead>\r\n        <tr>\r\n            {dt.head.map(col => <th key={col}>{col}</th>)}\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n            {sliceData.map((dato) => \r\n            <tr>\r\n                {dt.head.map(col =>{\r\n                    if(col === 'tipomezzo'){\r\n                        return <td key={nanoid()}>{dato[col]['tipo']}</td>\r\n                    }if(col === 'utentePrenotato'){\r\n                        return <td key={nanoid()}>{dato[col]['nome']}</td>\r\n                    }\r\n                    if(col === 'mezzoPrenotato'){\r\n                        return <td key={nanoid()}>{dato[col]['casaCostr']} {dato[col]['modello']}</td>\r\n                    }if(col === 'approvata'){\r\n                        if(dato[col])\r\n                            return <td key={nanoid()}>Si</td>\r\n                        return <td key={nanoid()}>No</td>\r\n                    }if(col === 'tipoutente'){\r\n                        return <td key={nanoid()}>{dato[col]['tipo']}</td>\r\n                    }if(col === 'dataInizio' || col === 'dataFine'){\r\n                        return <td key={nanoid()}>{dato[col].split('T')[0]}</td>\r\n                    }\r\n\r\n                    if(col === 'azioni'){\r\n                        switch(props.match.url.split(\"/\")[1]){\r\n                            case 'customer':\r\n                                return <td>\r\n                                <Link to={`/customer/${dato['id']}`}>\r\n                                    <Button variant=\"warning\">Modifica</Button>\r\n                                </Link>\r\n                                <Button variant=\"danger\" onClick={()=>dispatch(delCustomer(dato['id']))}>Elimina</Button>\r\n                                </td>\r\n                            case 'parcoauto':\r\n                                return <td>\r\n                                <Link to={`/parcoauto/${dato['id']}`}>\r\n                                    <Button variant=\"warning\">Modifica</Button>\r\n                                </Link>\r\n                                <Button variant=\"danger\" onClick={()=>dispatch(delMezzo(dato['id']))}>Elimina</Button>\r\n                                </td>\r\n                            case 'prenotazioni':\r\n                                return <td>\r\n                                <Link to={`/prenotazioni/${dato['id']}`}>\r\n                                    <Button variant=\"warning\">Modifica</Button>\r\n                                </Link>\r\n                                <Button variant=\"danger\" onClick={()=>dispatch(delPrenotazione(dato['id']))}>Elimina</Button>\r\n                                </td>\r\n                                break;\r\n                            default:\r\n                                dt = state.customer\r\n                                break;\r\n                        }\r\n                    }\r\n                    return <td key={nanoid()}>{dato[col]}</td>\r\n                }\r\n                )}\r\n            </tr>\r\n            )}\r\n        </tbody>\r\n    </table>\r\n\r\n\r\n\r\n    </div>\r\n    \r\n    }\r\n\r\n    return(\r\n        <div className=\"AppTable\">\r\n            {  dt.loading ? <p>Loading...</p>\r\n             : dt.error ? <p>Errore</p>\r\n             : TB\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table;","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Table\\ProvaSlice.js",["64","65","66","67","68","69","70","71","72"],"import { createSlice } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\nimport * as _ from 'lodash'\r\n\r\nconst initialState ={\r\n    Dati : [],\r\n    categoria : ''\r\n}\r\n\r\n\r\nexport const ProvaSlice = createSlice({\r\n    name : 'prova',\r\n    initialState,\r\n    reducers:{\r\n        ListaDatiReducer(state,action){\r\n            return{\r\n                ...state,\r\n                Dati: action.payload,\r\n                categoria : action.categoria\r\n            }\r\n        },\r\n        CustomerReducer(state,action){\r\n            switch(action.TipoOperazione){\r\n                case 'MODIFICA':\r\n                    const customerEsistente = state.DataReducer.Dati.find(dato => dato.id === id)\r\n                    const {id, nome,cognome,password} = action.payload\r\n                    if(customerEsistente){\r\n                        customerEsistente['nome'] = nome\r\n                        customerEsistente['cognome'] = cognome\r\n                        customerEsistente['password'] = password\r\n                    } \r\n                case 'AGGIUNGI':\r\n                    state.Dati.push(action.payload)\r\n                case 'ELIMINA':\r\n                    state.Dati = _.reject(state.Dati, { 'id': action.payload['id']});\r\n            }\r\n        },\r\n        MezziReducer(state,action){\r\n            switch(action.TipoOperazione){\r\n                case 'MODIFICA':\r\n                    const {id, casaCostr, modello, targa, tipomezzo} = action.payload\r\n                    const mezzoEsistente = state.DataReducer.Dati.find(dato => dato.id === id)\r\n                    if(mezzoEsistente){\r\n                        mezzoEsistente['casaCostr'] = casaCostr\r\n                        mezzoEsistente['modello'] = modello\r\n                        mezzoEsistente['targa'] = targa\r\n                        mezzoEsistente['tipomezzo']['id'] = tipomezzo\r\n                    }\r\n                case 'AGGIUNGI':\r\n                    state.Dati.push(action.payload)\r\n                case 'ELIMINA':\r\n                    state.Dati = _.reject(state.Dati, { 'id': action.payload['id']});\r\n            }\r\n        },\r\n        PrenotazioniReducer(state,action){\r\n            switch(action.TipoOperazione){\r\n                case 'MODIFICA':\r\n                    const {id, casaCostr, modello, targa, tipomezzo} = action.payload\r\n                    const mezzoEsistente = state.DataReducer.Dati.find(dato => dato.id === id)\r\n                    if(mezzoEsistente){\r\n                        mezzoEsistente['casaCostr'] = casaCostr\r\n                        mezzoEsistente['modello'] = modello\r\n                        mezzoEsistente['targa'] = targa\r\n                        mezzoEsistente['tipomezzo']['id'] = tipomezzo\r\n                    }\r\n                case 'AGGIUNGI':\r\n                    state.Dati.push(action.payload)\r\n                case 'ELIMINA':\r\n                    state.Dati = _.reject(state.Dati, { 'id': action.payload['id']});\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n// ---------------------------------------------- THUNK\r\nexport const ThunkListaDati = (categoria)=>{\r\n    switch(categoria){\r\n        case 'CUSTOMER':\r\n            return(dispatch)=>{\r\n                axios.get(\"http://localhost:8050/utenti/customer\")\r\n                .then(response=>{\r\n                    dispatch(ListaDatiReducer(ActionListaDati(response, categoria)))\r\n                })\r\n            }\r\n        case 'MEZZI':\r\n            return(dispatch)=>{\r\n                axios.get(\"http://localhost:8050/mezzi/catalogo\")\r\n                .then(response=>{\r\n                    dispatch(ListaDatiReducer(ActionListaDati(response, categoria)))\r\n                })\r\n            }\r\n        case 'PRENOTAZIONI':\r\n            return(dispatch)=>{\r\n                axios.get(\"http://localhost:8050/prenotazioni\")\r\n                .then(response=>{\r\n                    dispatch(ListaDatiReducer(ActionListaDati(response, categoria)))\r\n                })\r\n            }\r\n        default :\r\n            alert('errore')\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const ThunkAggiungiDato = (data,state) =>{\r\n    switch(state.categoria){\r\n        case 'CUSTOMER':\r\n            return(dispatch)=>{\r\n                axios.post(\"http://localhost:8050/utenti/aggiungi\", data)\r\n                dispatch(CustomerReducer(OperazioniAction(data, 'AGGIUNGI')))\r\n            }\r\n        case 'MEZZI':\r\n            return(dispatch)=>{\r\n                axios.post(\"http://localhost:8050/mezzi/aggiungi\", data)\r\n                dispatch(MezziReducer(OperazioniAction(data, 'AGGIUNGI')))\r\n            }\r\n        case 'PRENOTAZIONI':\r\n            return(dispatch)=>{\r\n                axios.post(\"http://localhost:8050/prenotazioni/aggiungi\", data)\r\n                dispatch(PrenotazioniReducer(OperazioniAction(data, 'AGGIUNGI')))\r\n            }\r\n        default :\r\n            alert('errore')\r\n    }   \r\n}\r\n\r\n\r\n// ACTIONS\r\n  const ActionListaDati = (data, categoria) =>{\r\n      return{\r\n          payload : data,\r\n          categoria : categoria\r\n      }\r\n  } \r\n\r\n  const OperazioniAction = (data, operazione)=>{\r\n      return{\r\n          payload : data,\r\n          TipoOperazione : operazione\r\n      }\r\n  }\r\n\r\nexport const SelById = (state, datoId) =>{ state.ProvaSlice.Dati.find(dato => dato['id'] === datoId)}\r\nexport const SelectAll = state => state.ProvaSlice.Dati\r\n\r\n\r\n\r\nexport const {CustomerReducer, MezziReducer, PrenotazioniReducer, ListaDatiReducer} = ProvaSlice.actions\r\nexport default ProvaSlice;\r\n\r\n","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Table\\CustomerSlice.js",[],"C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Form\\ModificaForm.js",["73","74","75","76","77","78","79"],"C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Form\\AggiungiForm.js",["80","81","82","83","84","85","86","87","88","89"],"import './form.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {Button} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {addCustomer, modCustomer, SelCustomerById, SelectAllCustomer} from '../Table/CustomerSlice'\r\nimport {Link} from 'react-router-dom'\r\nimport * as _ from 'lodash'\r\nimport {fetchCustomerData} from '../Table/CustomerSlice'\r\nimport {fetchMezziData} from '../Table/MezziSlice'\r\n\r\nfunction AggiungiForm(props){\r\n    // Initial Declaration\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n        dispatch(()=>fetchCustomerData())\r\n        dispatch(()=>fetchMezziData())\r\n    },[])\r\n    const userData = state.customer.Dati\r\n    const mezziData = state.mezzi.Dati\r\n    const state = useSelector(state => state)\r\n    let isAdding = true;\r\n    let tempUtente\r\n    tempUtente = { id: undefined, nome :undefined, cognome:undefined, tipoutente:{id:0, tipo:undefined}, password : undefined, nascita : undefined}\r\n    let misc = useSelector(state => state.customer)\r\n    let form  \r\n\r\n    console.log(userData)\r\n    console.log(mezziData)\r\n    \r\n    const handleInput = (col, event)=>{\r\n        switch(col){\r\n            case 'tipoutente':\r\n                if(parseInt(event.target.value) === 1){\r\n                    tempUtente[col]['id'] = parseInt(event.target.value)\r\n                    tempUtente[col]['tipo'] = \"ADMIN\"\r\n                }else{\r\n                    tempUtente[col]['id'] = parseInt(event.target.value)\r\n                    tempUtente[col]['tipo'] = \"CUSTOMER\"\r\n                }\r\n                break;\r\n            case 'id':\r\n                tempUtente[col] = parseInt(event.target.value)\r\n                break;\r\n            default :\r\n                tempUtente[col] = event.target.value \r\n                break\r\n        }\r\n    }\r\n\r\n    const handleAggiunta =()=>{\r\n        dispatch(addCustomer(tempUtente))\r\n    }\r\n    if(misc.head){\r\n      form= <div className=\"form-body\">\r\n        {\r\n            misc.head.map(col=>{\r\n                if(col !== 'azioni'){\r\n                    if(col !== 'id'){\r\n                        if(col === 'tipomezzo'){\r\n                            return   <div><input type=\"radio\" name=\"tipomezzo\" value=\"1\" />\r\n                            <label for=\"male\">Minivan</label><br/>\r\n                            <input type=\"radio\" name=\"tipomezzo\" value=\"2\" />\r\n                            <label for=\"female\">Autoveicolo</label><br/>\r\n                            <input type=\"radio\" name=\"tipomezzo\" value=\"3\" />\r\n                            <label for=\"other\">Furgone</label>\r\n                            <input type=\"radio\" name=\"tipomezzo\" value=\"4\" />\r\n                            <label for=\"other\">SUV</label></div>\r\n                        }if(col === 'tipoutente'){\r\n                            return  <div><input type=\"radio\" name=\"tipoutente\" value=\"1\"  onClick={(event)=>handleInput(col,event)} />\r\n                            <label for=\"admin\">Admin</label><br/>\r\n                            <input type=\"radio\" name=\"tipoutente\" value=\"2\" onClick={(event)=>handleInput(col,event)}/>\r\n                            <label for=\"customer\">Customer</label><br/></div>\r\n                        }\r\n                        if(col === 'utentePrenotato'){\r\n                            return <select>\r\n                            {userData.map(user=>{\r\n                                return <option value={user.id}>{user.nome}</option>\r\n                            })}  \r\n                            </select>\r\n                        }if(col === 'mezzoPrenotato'){\r\n                            return <select>\r\n                            {mezziData.map(m=>{\r\n                                return <option value={m.id}>{m.casaCostr + \" \" + m.modello}</option>\r\n                            })}  \r\n                            </select>   \r\n                        }\r\n                         return <input type=\"text\" placeholder={col} value={tempUtente[col]} onChange={(event)=>handleInput(col,event)}></input>\r\n                    }\r\n                    \r\n                }\r\n            })\r\n        }    \r\n        {\r\n                <div>\r\n                   <Link to=\"/\"><Button variant=\"warning\" onClick={()=>handleAggiunta()}>Aggiungi</Button></Link>\r\n                </div> \r\n        }\r\n        </div>\r\n    }else{\r\n        form = null\r\n    }\r\n    \r\n    return(\r\n        <div className=\"form\">\r\n           {form}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default AggiungiForm;","C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Table\\MezziSlice.js",[],"C:\\Users\\SI2001\\Desktop\\ReactJs\\rentalredux\\src\\Table\\PrenotazioniSlice.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":18},{"ruleId":"94","severity":1,"message":"98","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"99","line":4,"column":22,"nodeType":"96","messageId":"97","endLine":4,"endColumn":28},{"ruleId":"94","severity":1,"message":"100","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"98","line":1,"column":28,"nodeType":"96","messageId":"97","endLine":1,"endColumn":37},{"ruleId":"101","severity":1,"message":"102","line":106,"column":33,"nodeType":"103","messageId":"104","endLine":106,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":23,"column":13,"nodeType":"107","messageId":"108","endLine":36,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":32,"column":17,"nodeType":"111","messageId":"112","endLine":33,"endColumn":52},{"ruleId":"109","severity":1,"message":"110","line":34,"column":17,"nodeType":"111","messageId":"112","endLine":35,"endColumn":86},{"ruleId":"105","severity":1,"message":"106","line":39,"column":13,"nodeType":"107","messageId":"108","endLine":53,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":49,"column":17,"nodeType":"111","messageId":"112","endLine":50,"endColumn":52},{"ruleId":"109","severity":1,"message":"110","line":51,"column":17,"nodeType":"111","messageId":"112","endLine":52,"endColumn":86},{"ruleId":"105","severity":1,"message":"106","line":56,"column":13,"nodeType":"107","messageId":"108","endLine":70,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":66,"column":17,"nodeType":"111","messageId":"112","endLine":67,"endColumn":52},{"ruleId":"109","severity":1,"message":"110","line":68,"column":17,"nodeType":"111","messageId":"112","endLine":69,"endColumn":86},{"ruleId":"94","severity":1,"message":"98","line":2,"column":17,"nodeType":"96","messageId":"97","endLine":2,"endColumn":26},{"ruleId":"94","severity":1,"message":"113","line":2,"column":28,"nodeType":"96","messageId":"97","endLine":2,"endColumn":36},{"ruleId":"94","severity":1,"message":"114","line":10,"column":9,"nodeType":"96","messageId":"97","endLine":10,"endColumn":30},{"ruleId":"115","severity":1,"message":"116","line":61,"column":26,"nodeType":"117","messageId":"118","endLine":61,"endColumn":28},{"ruleId":"115","severity":1,"message":"119","line":72,"column":30,"nodeType":"117","messageId":"120","endLine":72,"endColumn":32},{"ruleId":"121","severity":1,"message":"122","line":103,"column":92,"nodeType":"123","endLine":103,"endColumn":102},{"ruleId":"121","severity":1,"message":"122","line":105,"column":80,"nodeType":"123","endLine":105,"endColumn":90},{"ruleId":"94","severity":1,"message":"113","line":2,"column":28,"nodeType":"96","messageId":"97","endLine":2,"endColumn":36},{"ruleId":"94","severity":1,"message":"124","line":6,"column":22,"nodeType":"96","messageId":"97","endLine":6,"endColumn":33},{"ruleId":"94","severity":1,"message":"125","line":6,"column":35,"nodeType":"96","messageId":"97","endLine":6,"endColumn":50},{"ruleId":"94","severity":1,"message":"126","line":6,"column":52,"nodeType":"96","messageId":"97","endLine":6,"endColumn":69},{"ruleId":"94","severity":1,"message":"127","line":8,"column":13,"nodeType":"96","messageId":"97","endLine":8,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":18,"column":7,"nodeType":"130","endLine":18,"endColumn":9,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":19,"column":22,"nodeType":"96","messageId":"134","endLine":19,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":20,"column":23,"nodeType":"96","messageId":"134","endLine":20,"endColumn":28},{"ruleId":"94","severity":1,"message":"135","line":22,"column":9,"nodeType":"96","messageId":"97","endLine":22,"endColumn":17},{"ruleId":"115","severity":1,"message":"119","line":57,"column":30,"nodeType":"117","messageId":"120","endLine":57,"endColumn":32},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'ProvaSlice' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Button' is defined but never used.","'Component' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'useState' is defined but never used.","'fetchPrenotazioniData' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'modCustomer' is defined but never used.","'SelCustomerById' is defined but never used.","'SelectAllCustomer' is defined but never used.","'_' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["138"],"no-use-before-define","'state' was used before it was defined.","usedBeforeDefined","'isAdding' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [dispatch]",{"range":"141","text":"142"},[702,704],"[dispatch]"]